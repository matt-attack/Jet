
extern_c fun int printf(char* h, int h);
extern_c fun char* malloc(int x);

extern_c fun int puts(char* str);

extern_c fun char getchar();

extern_c fun void exit(int status);

let int count = 0;
let int constructed = 0;

struct TestStruct
{
    int i;

    fun void TestStruct()
    {
        count++;
        constructed++;
    }

    fun void ~TestStruct()
    {
        count--;
    }

    fun int getI() { return this.i; }
}

fun TestStruct test()
{
    let x = TestStruct();
    x.i = 5;
    return x;
}

// results in +1 count
fun TestStruct fake_test()
{
    let x = TestStruct();// construct two, memcopy one, then destroy one, +1
    x.i = 65;
    return x;//construct one, memcopy one, then destroy one +0
}


fun int main()
{
	// Make sure local variables are prioritized for calls over global functions
    if (1)
    {
        let fake_test = test;
        let ret = fake_test();

        // Make sure the constructor was called
        if (count != 1)
        {
            puts("Test failed, not one alive");
            exit(-1);
        }

        if (ret.i != 5)
        {
            puts("Test failed");
            exit(-1);
        }
    }

    // Make sure the destructor was called
    if (count != 0)
    {
        puts("Test failed wrong live count");
        exit(-1);
    }

    // Now lets test making sure the thing actually gets destroyed
    let i = fake_test().getI();
    let i2 = fake_test().i;// todo fixme

    // Make sure the destructor was called
    if (count != 0)
    {
        puts("Test failed wrong live count");
        exit(-1);
    }

    // Make sure we constructed the expected number
    if (constructed != 2)
    {
        //puts("Test failed");
        //exit(-1);
    }
	return 0;
}
